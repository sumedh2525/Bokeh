# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/102HyGtnSDE95N-HPswt0b07RTvkDoKx0

Q1. How can you create a Bokeh plot using Python code?
"""

from bokeh.plotting import show , figure

p = figure(title = "My Bokeh plot", x_axis_label = "X", y_axis_label = "Y")

p.line(x,y , color = "pink",line_width=3)
show(p)

"""Q2. What are glyphs in Bokeh, and how can you add them to a Bokeh plot? Explain with an example.

Ans:
Glyphs in Bokeh are visual representations of data. They can be used to create a variety of plots, including line charts, bar charts, scatter plots, and pie charts.

To add a glyph to a Bokeh plot, you can use the glyph() method of the figure() object. The glyph() method takes a number of arguments, including the type of glyph, the data to be plotted, and the style of the glyph.
"""

from bokeh.plotting import figure, show
from bokeh.io import output_notebook
output_notebook()
p = figure(title = "My glyph examples",x_axis_label = "X",y_axis_label = "Y")
p.line([2,5,9,6,8,4,],[5,8,6,1,4,3], color = "red" , line_width =3)
show(p)

"""Q3. How can you customize the appearance of a Bokeh plot, including the axes, title, and legend?

Ans:
axes - This property allows you to customize the appearance of the axes, such as the color, width, and labels.
title - This property allows you to customize the title of the plot.
legend - This property allows you to customize the appearance of the legend, such as the location, labels, and colors.
"""

import bokeh.plotting as bp

# Prepare the data
x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 5]

# Create a new plot
p = bp.figure()

# Add a line graph to the plot
p.line(x, y)

#customize
p.xaxis.axis_label = "X-axis"
p.yaxis.axis_label = "Y-axis"
p.xaxis.major_label_text_font_size = "12px"
p.yaxis.major_label_text_font_size ="12px"
p.title = "My Line Chart"

p.line(x,y , color = "red" , line_width = 3 , legend = "Line glyph")

p.legend.location = "top_right"
p.legend.title = "Glyph Type"
p.xgrid.visible = True
p.ygrid.visible= True
p.xgrid.grid_line_color = "green"
p.xgrid.grid_line_dash = "dashed"

show(p)

"""Q4. What is a Bokeh server, and how can you use it to create interactive plots that can be updated in
real time?

A Bokeh server is a web server that can be used to create interactive plots that can be updated in real time. Bokeh servers are typically used to create dashboards and other applications that require users to be able to interact with the data in real time.
"""

import bokeh.plotting as bp

# Prepare the data
x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 5]

# Create a new plot
p = bp.figure()

# Add a line graph to the plot
p.line(x, y)

# Start the Bokeh server
show(p)

"""Q5. How can you embed a Bokeh plot into a web page or dashboard using Flask or Django?"""

from flask import Flask , render_template
from bokeh.embed import components
# creating a Bokeh plot
x = [2,5,4,6,7,8]
y = [8,6,7,2,9,4]

p = bp.figure()
p.line(x,y)
# Generating the HTML code fot the plot
script , div = components(p)
# creating a flask app
app = Flask(__name__)
@app.route('/')
def index():
  return render_template("index.html", script = script, div = div)

if __name__ == "__main__":
  app.run(debug = True)

